#include "Project.h"
#include <stdio.h>
#include <iostream>

#include <fstream>
#include <sstream>
#include <vector>

#include <stdlib.h>
#include <string.h>

using namespace std;

const int MATRIX_SIZE = 28;

void printmatrix_input(int result[28][28])
{
	printf("\n");
	int i;
	int j;
	for(i = 0; i < 28; ++i)
	{
		for(j = 0; j <28; ++j)
		{
			printf("%d ",result[i][j]);
			if(j == 27)
			printf("\n");
		}
	}
	printf("\n");
}

int stringToInt(const std::string& str) {
    int result;
    std::stringstream ss(str);
    ss >> result;
    return result;
}


//int main() {
//
//	// Reading input data
//	int inputs[28][28];
//
//	for(int i=0;i<28;i++)
//		for(int j=0;j<28;j++)
//			inputs[i][j]=0;
//
//    ifstream file("GUC_639_59_31001_2023-03-30T09_16_26.csv");
//    if (file.is_open()) {
//        string line;
//        getline(file, line);
//		stringstream ss(line);
//		string value;
//
//		for(int row_index=0;row_index<28;row_index++)
//			for(int col_index=0;col_index<28;col_index++)
//			{
//				getline(ss, value, ',');
//				inputs[row_index][col_index] = stringToInt(value);
//			}
//        file.close();
//    }
//    printmatrix_input(inputs);
//
//    return 0;
//}


int main()
{
// int matrixA[28][28] = {
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28},
//{1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28}
//};

	// Reading input data
	int inputs[28][28];

	for(int i=0;i<28;i++)
		for(int j=0;j<28;j++)
			inputs[i][j]=0;

    ifstream file("GUC_639_59_31001_2023-03-30T09_16_26.csv");
    if (file.is_open()) {
        string line;
        getline(file, line);
		stringstream ss(line);
		string value;

		for(int row_index=0;row_index<28;row_index++)
			for(int col_index=0;col_index<28;col_index++)
			{
				getline(ss, value, ',');
				inputs[row_index][col_index] = stringToInt(value);
			}
        file.close();
    }
//    printmatrix_input(inputs);
 double matrixB[2][2]= {
{0.09147772  ,0.08124895},
{-0.20509367 ,-0.0041643}

 };
 double matrixC[2][2]= {
{0.04559669 ,-0.36797318},
{-0.08351272,-0.36409515}
 };
// int matrixB[2][2]= {
//{1,1},
//{1,1}
//
// };
// int matrixC[2][2]= {
//{1,1},
//{1,1}
// };
 double result[14][14];
 double result2[7][7];
 layer1(inputs, matrixB,result);
 layer2(result,matrixC, result2);
 printmatrix2(result2);
// printf("%f ",result2[1][1]);
// int x,y,z;
// for (x = 0; x < (14);x++){
//	 for(y =0 ;y < (14);y++){
//		 FIFO(1, (result[x][y]) ,z);
//	 }
// }
//int x2,y2,z2;
//for (x2 = 0; x < (14);x++){
//	 for(y2 =0 ;y < (14);y++){
//		 FIFO(0, z2 ,(input_layer2[x2][y2]));
//	 }
//}
//layer2(input,matrixC, result2);
//
// //Main(matrixA, matrixB,result);
// printmatrix2(result2);
//// int d;
//// Matrixdotproduct(matrixB, matrixB, d);
//// printf("%d ",d);

 return 0;
}
